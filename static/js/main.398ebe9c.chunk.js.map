{"version":3,"sources":["redux/reducers/index.js","store.js","queries/queries.js","redux/actions/index.js","components/Categories/Categories.jsx","components/CurrencySelector/CurrencySelector.jsx","components/Minicart/MinicartItem/MinicartItem.jsx","components/Minicart/MinicartTotal/MinicartTotal.jsx","components/Minicart/Minicart.jsx","components/HeaderWidgets/HeaderWidgets.jsx","components/Header/Header.jsx","components/ProductCard/ProductCard.jsx","components/ProductList/ProductList.jsx","components/PDP/PDP.jsx","components/Cart/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/App/App.jsx","index.js"],"names":["initialState","activeCategory","activeCurrency","itemsInCartNumber","currencyListVisible","minicartVisible","productsInCart","reducer","state","action","type","payload","products","found","item","productId","JSON","stringify","selectedAttributes","selectedProductCount","push","itemNum","deleteIndex","entries","index","splice","store","createStore","GET_CATEGORIES","gql","GET_PRODUCTS_BY_CATEGORY","PRODUCT_DETAILS","GET_CURRENCIES","GET_PRICES","addProductToCart","productDetails","increaseProductInCartAmount","decreaseProductInCartAmount","Categories","onCategorySelect","e","target","innerHTML","props","setActiveCategory","this","data","loading","error","categories","categoryNames","map","itm","name","className","onClick","to","React","Component","compose","connect","category","graphql","CurrencySelector","curRef","createRef","currencyListItems","currencies","setActiveCurrency","label","symbol","currencyLabel","handleOutsideClick","path","includes","current","toggleCurrencyList","document","body","addEventListener","removeEventListener","ref","filter","currency","MinicartItem","showPrice","priceList","price","amount","attributes","items","attrItem","swatch","displayValue","divStyle","backgroundColor","value","active","style","id","stopPropagation","productInCart","product","brand","gallery","prices","showAttributes","src","alt","options","variables","fetchPolicy","MinicartTotal","sum","forEach","element","toFixed","countTotal","withParams","params","useParams","Minicart","toggleMinicart","classList","add","remove","HeaderWidgets","setState","Header","ProductCard","addDefaultToCart","preventDefault","defaultAttributes","inStock","ProductList","showProducts","categoryName","title","PDP","selectedImage","setDefaultAttributes","Object","keys","length","setActiveAttribute","attrName","attribute","changeImage","onAddToCard","description","img","replace","CartItem","Cart","App","exact","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","basename","getElementById"],"mappings":"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","file":"static/js/main.398ebe9c.chunk.js","sourcesContent":["const initialState = {\n    activeCategory: 'all',\n    activeCurrency: 'USD',\n    itemsInCartNumber: 0,\n    currencyListVisible: false,\n    minicartVisible: false,\n    productsInCart: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_ACTIVE_CATEGORY': {\n            return {\n                ...state,\n                activeCategory: action.payload\n            }\n        }\n        case 'SET_ACTIVE_CURRENCY': {\n            return {\n                ...state,\n                activeCurrency: action.payload\n            }\n        }\n        case 'ADD_PRODUCT_TO_CART': {\n            let products = [...state.productsInCart];\n            let found = false;\n            for (let item of products) {\n                if (item.productId === action.payload.productId && JSON.stringify(item.selectedAttributes) === JSON.stringify(action.payload.selectedAttributes)) {\n                    found = true;\n                    item.selectedProductCount++;\n                }\n            }\n            if (!found) products.push(action.payload);\n            return {\n                ...state,\n                productsInCart: [...products],\n                itemsInCartNumber: state.itemsInCartNumber + 1\n            }\n        }\n        case 'INCREASE_PRODUCT_AMOUNT': {\n            let products = [...state.productsInCart];\n            let itemNum = state.itemsInCartNumber;\n            for (let item of products) {\n                if (item.productId === action.payload.productId && item.selectedAttributes === action.payload.selectedAttributes) {\n                    item.selectedProductCount++;\n                }\n            }\n            return {\n                ...state,\n                productsInCart: [...products],\n                itemsInCartNumber: ++itemNum\n            }\n        }\n        case 'DECREASE_PRODUCT_AMOUNT': {\n            let deleteIndex = null;\n            let products = [...state.productsInCart];\n            let itemNum = state.itemsInCartNumber;\n            for (let [index, item] of products.entries()) {\n                if (item.productId === action.payload.productId && item.selectedAttributes === action.payload.selectedAttributes) {\n                    if (item.selectedProductCount > 1) {\n                        item.selectedProductCount--;\n                    } else {\n                        deleteIndex = index;\n                    }\n                }\n            }\n\n            if (deleteIndex !== null) products.splice(deleteIndex, 1);\n            return {\n                ...state,\n                productsInCart: [...products],\n                itemsInCartNumber: --itemNum\n            }\n        }\n\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from \"./redux/reducers\"\n\nconst store = createStore(reducer)\n\nexport default store;","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_PRODUCTS = gql`query{\n  categories{\n    name\n    products{\n      id\n      name\n      gallery\n      inStock\n      attributes {\n        id\n        name\n        type\n        items {\n          displayValue\n          id\n          value\n        }\n      }\n      prices{\n        currency\n        amount\n      }\n    }\n  } \n}`;\n\nexport const GET_CATEGORIES = gql`query {\n  categories{\n    name\n  }\n}`;\n\nexport const GET_PRODUCTS_BY_CATEGORY = gql`query CategoryQuery($categoryName: CategoryInput) {\n  category(input: $categoryName) {\n    name\n    products {\n      id\n      name\n      gallery\n      inStock\n      attributes {\n        id\n        name\n        type\n        items {\n          displayValue\n          id\n          value\n        }\n      }\n      prices{\n        currency{\n          label\n          symbol\n        }\n        amount\n      }\n    }\n  }\n}`;\n\nexport const PRODUCT_DETAILS = gql`\nquery ProductQuery($productId: String!) {\n  product(id: $productId) {\n    id\n    name\n    gallery\n    description\n    inStock\n    attributes {\n      id\n      name\n      type\n      items {\n        displayValue\n        id\n        value\n      }\n    }\n    prices {\n      currency{\n        label\n        symbol\n      }\n      amount\n    }\n    brand\n  }\n}\n`;\n\nexport const GET_CURRENCIES = gql`query{\n  currencies{\n    label\n    symbol\n  }\n}`;\n\nexport const GET_PRICES = gql`query {\n  category(input: {title: \"all\"}){\n    name\n    products {\n      id\n      prices {\n        currency{\n          symbol\n          label\n        }\n        amount\n      }\n    }\n  }\n}`;\n\n\n\n","export const setActiveCategory = (category) => {\n    return {\n        type: 'SET_ACTIVE_CATEGORY',\n        payload: category\n    }\n}\n\nexport const setActiveCurrency = (currency) => {\n    return {\n        type: 'SET_ACTIVE_CURRENCY',\n        payload: currency\n    }\n}\n\nexport const addProductToCart = (productDetails) => {\n    return {\n        type: 'ADD_PRODUCT_TO_CART',\n        payload: productDetails\n    }\n}\n\nexport const increaseProductInCartAmount = (productId, selectedAttributes) => {\n    return {\n        type: 'INCREASE_PRODUCT_AMOUNT',\n        payload: {productId, selectedAttributes}\n    }\n}\n\nexport const decreaseProductInCartAmount = (productId, selectedAttributes) => {\n    return {\n        type: 'DECREASE_PRODUCT_AMOUNT',\n        payload: {productId, selectedAttributes}\n    }\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { GET_CATEGORIES } from '../../queries/queries';\nimport { setActiveCategory } from '../../redux/actions';\nimport \"./Categories.scss\"\n\nclass Categories extends React.Component {\n\n    onCategorySelect = (e) => {\n        const activeCategory = e.target.innerHTML;\n        this.props.setActiveCategory(activeCategory);\n    }\n\n    render() {\n        const { data: { loading, error, categories },\n            activeCategory\n        } = this.props;\n\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error!</p>;\n\n        let categoryNames = categories.map(itm => itm.name);\n\n        return (\n            <ul className=\"categories\">\n                {categoryNames.map((itm, index) => {\n                    return (\n                        <li className={`categories__item ${activeCategory === itm  ? 'active' : ''}`}\n                            onClick={this.onCategorySelect}\n                            key={`${index}_${itm}`}>\n                            <Link to='/'>\n                                {itm}\n                            </Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        activeCategory: state.activeCategory\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { setActiveCategory }),\n    graphql(GET_CATEGORIES)\n)(Categories);\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { GET_CURRENCIES } from '../../queries/queries';\nimport { setActiveCurrency } from '../../redux/actions';\nimport \"./CurrencySelector.scss\"\n\nclass CurrencySelector extends React.Component {\n\n    curRef = React.createRef();\n\n    currencyListItems = (currencies) => {\n        return currencies.map((itm, index) =>\n            <li\n                key={`${itm}_${index}`}\n                className=\"currency-list__item\"\n                onClick={() => this.setActiveCurrency(itm.label)}>\n                {`${itm.symbol} ${itm.label}`}\n            </li>\n        )\n    }\n\n    setActiveCurrency = (currencyLabel) => {\n        this.props.setActiveCurrency(currencyLabel)\n    }\n\n    handleOutsideClick = (e) => {\n        if (this.props.currencyListVisible && !e.path.includes(this.curRef.current)) {\n            this.props.toggleCurrencyList();\n        }\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.handleOutsideClick)\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.handleOutsideClick)\n    }\n\n    render() {\n\n        const { data: { loading, error, currencies },\n            activeCurrency,\n            currencyListVisible,\n            toggleCurrencyList,\n        } = this.props;\n\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error!</p>;\n\n        return (\n            <div className=\"currency-selector\"\n                ref={this.curRef}\n                onClick={toggleCurrencyList}>\n                <span className=\"currency-switch\">{currencies.filter(itm => itm.label === activeCurrency)[0].symbol}</span>\n                {currencyListVisible ? (\n                    <ul className=\"currency-list\">\n                        {this.currencyListItems(currencies)}\n                    </ul>) : null}\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        activeCurrency: state.activeCurrency\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { setActiveCurrency }),\n    graphql(GET_CURRENCIES)\n)(CurrencySelector);\n","import React from 'react'\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { PRODUCT_DETAILS } from \"../../../queries/queries\"\nimport { increaseProductInCartAmount, decreaseProductInCartAmount } from '../../../redux/actions'\nimport { graphql } from '@apollo/client/react/hoc';\nimport \"./MinicartItem.scss\"\n\nclass MinicartItem extends React.Component {\n\n    showAttributes(attributes, selectedAttributes) {\n        return attributes.map(item => {\n            return (\n                <div key={item.id} className=\"minicart-attr__row\">\n                    <ul className=\"minicart-attr__list\">\n                        {item.items.map(attrItem => {\n                            const swatch = (item.type === 'swatch' ? ' swatch' : '');\n                            const displayValue = (item.type === 'swatch' ? '' : attrItem.displayValue);\n                            const divStyle = (item.type === 'swatch' ? { backgroundColor: attrItem.value } : {});\n                            const active = (selectedAttributes[item.name] === attrItem.displayValue) ? 'active' : '';\n                            return (\n                                <li key={attrItem.id}>\n                                    <div className={'minicart-attr__btn ' + active + swatch} style={divStyle}>{displayValue}</div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>)\n        })\n    }\n\n    showPrice = (priceList, activeCurrency) => {\n        let price = priceList.filter(item => item.currency.label === activeCurrency);\n        return `${price[0].currency.symbol} ${price[0].amount}`\n    }\n\n    increaseProductInCartAmount(e, productId, selectedAttributes){\n        e.stopPropagation();\n        this.props.increaseProductInCartAmount(productId, selectedAttributes)\n    }\n\n    decreaseProductInCartAmount(e, productId, selectedAttributes){\n        e.stopPropagation();\n        this.props.decreaseProductInCartAmount(productId, selectedAttributes)\n    }\n\n    render() {\n\n        const {\n            data,\n            currency,\n            productId,\n            productInCart,\n            amount, \n        } = this.props;\n\n        const {selectedAttributes} = productInCart;\n\n        if (data.loading) return <p>Loading...</p>\n        if (data.loading) return <p>Error...</p>\n\n        const { brand, name, gallery, attributes, prices } = data.product;\n\n        return (\n            <li className=\"minicart-products__item minicart-product\">\n                <div className=\"minicart-product__details\">\n                    <div className=\"mproduct\">\n                        <div className=\"mproduct__name\">{brand}</div>\n                        <div className=\"mproduct__name\">{name}</div>\n                        <div className=\"mproduct__price\">{this.showPrice(prices, currency)}\n                        </div>\n                        <div className=\"mproduct__sizes\">\n                            <ul className=\"minicart-sizes\">\n                                {this.showAttributes(attributes, selectedAttributes)}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"m-amount\">\n                        <div onClick={(e) => this.increaseProductInCartAmount(e, productId, selectedAttributes)} className=\"m-amount__more\"></div>\n                        <div className=\"m-amount__num\">{amount}</div>\n                        <div onClick={(e) => this.decreaseProductInCartAmount(e, productId, selectedAttributes)} className=\"m-amount__less\"></div>\n                    </div>\n                </div>\n                <div className=\"minicart-product__image\">\n                    <img src={gallery[0]} alt=\"product\" />\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default compose(\n    connect(null, { increaseProductInCartAmount, decreaseProductInCartAmount }),\n    graphql(PRODUCT_DETAILS, {\n        options: props => ({\n            variables: {\n                productId: props.productId\n            },\n            fetchPolicy: 'no-cache'\n        }),\n    }))(MinicartItem);\n","import React from \"react\";\nimport { graphql } from '@apollo/client/react/hoc';\nimport { useParams } from \"react-router-dom\";\nimport { GET_PRICES } from \"../../../queries/queries\"\n\n\nfunction withParams(Component) {\n    return props => <Component {...props} params={useParams()} />;\n}\n\n\nclass MinicartTotal extends React.Component {\n\n    countTotal(products, productsInCart, activeCurrency) {\n        let sum = 0;\n\n        productsInCart.forEach(element => {\n            const productFound = products.filter(itm => itm.id === element.productId)[0];\n            const price = productFound.prices.filter(itm => itm.currency.label === activeCurrency)[0];\n            sum += price.amount * element.selectedProductCount;\n        });\n\n        return sum.toFixed(2);\n    }\n\n    render() {\n        const { data: { loading, error, category }, productsInCart, activeCurrency } = this.props;\n\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error!</p>;\n\n        const { products } = category;\n\n\n\n        return (\n            <div className=\"minicart-total\">\n                <div className=\"minicart-total__header\">Total:</div>\n                <div className=\"minicart-total__sum\">{this.countTotal(products, productsInCart, activeCurrency)}</div>\n            </div>\n        )\n    }\n}\n\n\nexport default withParams(graphql(GET_PRICES)(MinicartTotal));","import React from 'react'\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\"\nimport MinicartItem from './MinicartItem/MinicartItem'\nimport MinicartTotal from './MinicartTotal/MinicartTotal';\nimport \"./Minicart.scss\"\n\nclass Minicart extends React.Component {\n\n    curRef = React.createRef();\n\n    handleOutsideClick = (e) => {\n        if (this.props.minicartVisible && !e.path.includes(this.curRef.current)) {\n            this.props.toggleMinicart();\n        }\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.handleOutsideClick)\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.handleOutsideClick)\n    }\n\n    countTotal = (productsInCart, activeCurrency) => {\n        <MinicartTotal />\n    }\n\n    render() {\n\n        const {\n            minicartVisible,\n            productsInCart,\n            itemsInCartNumber,\n            toggleMinicart,\n            activeCurrency,\n        } = this.props;\n\n        return (\n            <div className=\"cart-widget\" onClick={toggleMinicart} ref={this.curRef}>\n                <div className=\"cart-widget__items-count\">{itemsInCartNumber}</div>\n\n                {minicartVisible ? document.body.classList.add(\"lock\") : document.body.classList.remove(\"lock\")}\n                {minicartVisible ? <div className=\"minicart-overlay\"></div> : null}\n                {minicartVisible ? (\n                    <div className=\"minicart\">\n                        <div className=\"minicart__header\">My Bag, <span className=\"item-num\">{itemsInCartNumber} items</span></div>\n                        <ul className=\"minicart-products\">\n                            {productsInCart.map((itm, index) => {\n                                return <MinicartItem key={`${itm.productId}_${index}`}\n                                    productId={itm.productId}\n                                    amount={itm.selectedProductCount}\n                                    currency={activeCurrency}\n                                    productInCart={itm}\n                                />\n                            })}\n                        </ul>\n                        <MinicartTotal productsInCart={productsInCart} activeCurrency={activeCurrency}/>\n                        <div className=\"minicart-buttons\">\n                            <Link to=\"/cart\" className=\"viewbag-btn minicart-btn\">View bag</Link>\n                            <div className=\"checkout-btn minicart-btn\">Check out</div>\n                        </div>\n                    </div>) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        activeCurrency: state.activeCurrency,\n        itemsInCartNumber: state.itemsInCartNumber,\n        productsInCart: state.productsInCart\n    }\n}\n\nexport default connect(mapStateToProps)(Minicart);","import React from \"react\";\nimport CurrencySelector from \"../CurrencySelector/CurrencySelector\";\nimport Minicart from '../Minicart/Minicart';\n\nexport default class HeaderWidgets extends React.Component {\n\n    state = {\n        currencyListVisible: false,\n        minicartVisible: false,\n    }\n\n    toggleCurrencyList = () => {\n        if (this.state.minicartVisible) {\n            this.setState({ minicartVisible: false })\n        }\n        this.setState((state) => ({\n            currencyListVisible: !state.currencyListVisible\n        }))\n    }\n\n    toggleMinicart = () => {\n        if (this.state.currencyListVisible) {\n            this.setState((state) => ({\n                currencyListVisible: !state.currencyListVisible\n            }))\n        }\n        this.setState((state) => ({\n            minicartVisible: !state.minicartVisible\n        }))\n    }\n\n    render() {\n        return (\n            <ul className='header__widgets'>\n                <li>\n                    <CurrencySelector\n                        currencyListVisible={this.state.currencyListVisible}\n                        toggleCurrencyList={this.toggleCurrencyList}\n                    />\n                </li>\n                <li >\n                    <Minicart \n                        toggleMinicart={this.toggleMinicart}\n                        minicartVisible={this.state.minicartVisible}\n                    />\n                </li>\n            </ul>\n        )\n    }\n}","import React from 'react';\nimport Categories from '../Categories/Categories';\nimport HeaderWidgets from '../HeaderWidgets/HeaderWidgets';\nimport './Header.scss';\n\nexport default class Header extends React.Component {\n\n    render() {\n        return (\n            <div className='header' >\n                <div className='container header__container'>\n                    <div className=\"header__categories\">\n                        <Categories />\n                    </div>\n                    <div className='header__logo'>\n                       uwear\n                    </div>\n                    <HeaderWidgets />\n                </div>\n            </div>\n        )\n    }s\n}","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { addProductToCart } from '../../redux/actions'\nimport { Link } from \"react-router-dom\";\nimport \"./ProductCard.scss\"\n\nclass ProductCard extends React.Component {\n\n    addDefaultToCart = (product, e) => {\n        e.preventDefault();\n        let defaultAttributes = {};\n        product.attributes.forEach(element => {\n            defaultAttributes = {\n                ...defaultAttributes,\n                [element.name]: element.items[0].displayValue\n            }\n\n        });\n        const productDetails = {\n            productId: product.id,\n            selectedAttributes: defaultAttributes,\n            selectedProductCount: 1\n        }\n        this.props.addProductToCart(productDetails);\n    }\n\n    showPrice = (priceList, activeCurrency) => {\n        let price = priceList.filter(item => item.currency.label === activeCurrency);\n        return `${price[0].currency.symbol} ${price[0].amount}`\n    }\n\n    render() {\n\n        const { product, activeCurrency, inStock } = this.props;\n\n        return (\n            <div className='product-card'>\n                <Link to={`/products/` + product.id}>\n                    <div className=\"product-card__image\">\n                        {inStock ? null : <div className=\"product-card__outofstock\">Out of stock</div>}\n                        <img src={product.gallery[0]} alt=\"product\" />\n                        {inStock ? <button className=\"add-to-card\" onClick={(e) => this.addDefaultToCart(product, e)}></button> : null}\n                    </div>\n                    <div className=\"product-card__text\">\n                        {product.name}\n                    </div>\n                    <div className=\"product-card__price\">\n                        {this.showPrice(product.prices, activeCurrency)}\n                    </div>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { addProductToCart })(ProductCard)","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { GET_PRODUCTS_BY_CATEGORY } from \"../../queries/queries\"\nimport ProductCard from \"../ProductCard/ProductCard\";\nimport './ProductList.scss';\n\nclass ProductList extends React.Component {\n\n    showProducts = (products, activeCurrency) => {\n        return products.map(itm => (<ProductCard key={itm.id} product={itm} activeCurrency={activeCurrency} inStock={itm.inStock} />));\n    }\n\n    render() {\n        const { data: { loading, error, category },\n            activeCurrency,\n        } = this.props;\n\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error!</p>;\n\n        const {categoryName, products} = category;\n\n        return (\n            <div className=\"category\">\n                <div className=\"container\">\n                    <h1 className='category__header'>{categoryName}</h1>\n                    <div className=\"category__wrapper\">\n                        {this.showProducts(products, activeCurrency)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        activeCategory: state.activeCategory,\n        activeCurrency: state.activeCurrency\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    graphql(GET_PRODUCTS_BY_CATEGORY, {\n        options: props => ({\n            variables: {\n                categoryName: { title: props.activeCategory }\n            },\n            fetchPolicy: 'no-cache'\n        }),\n    })\n)(ProductList);\n\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport { addProductToCart } from '../../redux/actions';\nimport { PRODUCT_DETAILS } from \"../../queries/queries\"\nimport { graphql } from '@apollo/client/react/hoc';\nimport './PDP.scss'\n\nfunction withParams(Component) {\n    return props => <Component {...props} params={useParams()} />;\n}\n\nclass PDP extends React.Component {\n\n    state = {\n        selectedAttributes: {},\n        selectedImage: 0\n    };\n\n    componentDidUpdate() {\n        if (this.props.data && !this.props.data.error && !this.props.data.loading && this.props.data.product.inStock)\n            this.setDefaultAttributes();\n    }\n\n    componentDidMount() {\n        if (this.props.data && !this.props.data.error && !this.props.data.loading && this.props.data.product.inStock)\n            this.setDefaultAttributes();\n\n    }\n\n    setDefaultAttributes = () => {\n        if (Object.keys(this.state.selectedAttributes).length === 0) {\n            this.props.data.product.attributes.forEach(element => {\n                this.setActiveAttribute(element.name, element.items[0].displayValue)\n            });\n        }\n    }\n\n    setActiveAttribute = (attrName, attribute) => {\n        this.setState((state) => {\n            const attr = {\n                ...state.selectedAttributes,\n                [attrName]: attribute\n            }\n            return { selectedAttributes: attr }\n        })\n    }\n\n    changeImage = (index) => {\n        this.setState({ selectedImage: index })\n    }\n\n    showAttributes(attributes, inStock) {\n        return attributes.map(item => {\n            return (\n                <div key={item.id} className=\"pdp-attr__row\">\n                    <div className=\"pdp-attr__header\">{item.name}</div>\n                    <ul className=\"pdp-attr__list\">\n                        {item.items.map((attrItem) => {\n                            const swatch = (item.type === 'swatch' ? ' swatch' : '');\n                            const displayValue = (item.type === 'swatch' ? '' : attrItem.displayValue);\n                            const divStyle = (item.type === 'swatch' ? { backgroundColor: attrItem.value } : {});\n                            const active = (this.state.selectedAttributes[item.name] === attrItem.displayValue) ? 'active' : '';\n                            return (\n                                <li key={attrItem.id}>\n                                    {inStock ?\n                                        <button className={'pdp-attr__btn ' + active + swatch} style={divStyle} onClick={() => this.setActiveAttribute(item.name, attrItem.displayValue)}>{displayValue}</button> :\n                                        <button className={'pdp-attr__btn ' + swatch} style={divStyle}>{displayValue}</button>\n                                    }\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        })\n    }\n\n    onAddToCard = (productId) => {\n        const productDetails = {\n            productId: this.props.params.id,\n            selectedAttributes: this.state.selectedAttributes,\n            selectedProductCount: 1\n        }\n        this.props.addProductToCart(productDetails);\n    }\n\n    showPrice = (priceList, activeCurrency) => {\n        let price = priceList.filter(item => item.currency.label === activeCurrency);\n        return `${price[0].currency.symbol} ${price[0].amount}`\n    }\n\n    render() {\n        const { data: { loading, error, product }, activeCurrency } = this.props;\n\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error!</p>;\n\n        const { brand, name, description, gallery, attributes, prices, inStock } = product;\n\n        return (\n            <div className=\"pdp\">\n                <div className=\"container\">\n                    <div className=\"product-description\">\n                        <div className=\"product-description__gallery gallery\">\n                            <div className=\"gallery__thumbs\">\n                                <ul className=\"pdp-thumbs\">\n                                    {gallery.map((img, index) =>\n                                        <li key={img} className=\"pdp-thumbs__item\" onClick={() => this.changeImage(index)}>\n                                            <img src={img} alt=\"thumb\" />\n                                        </li>)}\n                                </ul>\n                            </div>\n                            <div className=\"gallery__image\">\n                                <img src={gallery[this.state.selectedImage]} alt=\"product\" />\n                            </div>\n                        </div>\n                        <div className=\"product-description__details product-details\">\n                            <div className=\"product-details__header\">\n                                {brand}\n                            </div>\n                            <div className=\"product-details__subheader\">\n                                {name}\n                            </div>\n                            <div className=\"product-details__attr pdp-attr\">\n                                {this.showAttributes(attributes, inStock)}\n                            </div>\n                            <div className=\"product-details__price pdp-price\">\n                                <div className=\"pdp-price__header\">\n                                    Price:\n                                </div>\n                                <div className=\"pdp-price__amount\">\n                                    {this.showPrice(prices, activeCurrency)}\n                                </div>\n                            </div>\n                            {inStock ?\n                                <button onClick={this.onAddToCard} className=\"product-details__add-btn\">\n                                    Add to cart\n                                </button> :\n                                <div className=\"product-details__out-of-stock\">Out of stock</div>\n                            }\n                            <p className=\"product-details__text\">\n                                {description.replace(/<[^>]+>/g, '')}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        activeCurrency: state.activeCurrency,\n    }\n}\n\nexport default connect(mapStateToProps, { addProductToCart })(withParams(\n    graphql(PRODUCT_DETAILS, {\n        options: props => ({\n            variables: {\n                productId: props.params.id\n            },\n            fetchPolicy: 'no-cache'\n        }),\n    })(PDP)));","import React from 'react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { PRODUCT_DETAILS } from \"../../../queries/queries\"\nimport { graphql } from '@apollo/client/react/hoc';\nimport { increaseProductInCartAmount, decreaseProductInCartAmount } from '../../../redux/actions';\nimport \"./CartItem.scss\"\n\n\nclass CartItem extends React.Component {\n\n    showAttributes(attributes, selectedAttributes) {\n        return attributes.map(item => {\n            return (\n                <div key={item.id} className=\"cart-attr__row\">\n                    <div className=\"cart-attr__header\">{item.id}</div>\n                    <ul className=\"cart-attr__list\">\n                        {item.items.map(attrItem => {\n                            const active = (selectedAttributes[item.name] === attrItem.displayValue) ? 'active' : '';\n                            return (\n                                <li key={attrItem.id}>\n                                    <button className={'cart-attr__btn ' + active}>{attrItem.displayValue}</button>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>)\n        })\n    }\n\n    showPrice = (priceList, activeCurrency) => {\n        let price = priceList.filter(item => item.currency.label === activeCurrency);\n        return `${price[0].currency.symbol} ${price[0].amount}`\n    }\n\n    render() {\n\n        const { \n            data, \n            amount, \n            activeCurrency, \n            productInCart, \n            productId,\n            increaseProductInCartAmount,\n            decreaseProductInCartAmount\n        } = this.props;\n\n        const {selectedAttributes} = productInCart;\n\n        if (data.loading) return <p>Loading...</p>\n        if (data.loading) return <p>Error...</p>\n\n        const { brand, name, gallery, attributes, prices } = data.product;\n\n        return (\n            <li className=\"cart-list__item cart-product\" >\n                <div className=\"cart-product__details\">\n                    <div className=\"product-info\">\n                        <div className=\"product-info__header\">{brand}</div>\n                        <div className=\"product-info__subheader\">{name}</div>\n                        <div className=\"product-info__price\">{this.showPrice(prices, activeCurrency)}</div>\n                        <div className=\"product-info__attr\">\n                            <ul className=\"cart-attr\">\n                                {this.showAttributes(attributes, selectedAttributes)}\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"amount\">\n                        <div onClick={() => increaseProductInCartAmount(productId, selectedAttributes)} className=\"amount__more\"></div>\n                        <div className=\"amount__num\">{amount}</div>\n                        <div onClick={() => decreaseProductInCartAmount(productId, selectedAttributes)} className=\"amount__less\"></div>\n                    </div>\n                </div>\n                <div className=\"cart-product__image\">\n                    <img src={gallery[0]} alt=\"product\" />\n                </div>\n            </li>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        activeCurrency: state.activeCurrency\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {increaseProductInCartAmount, decreaseProductInCartAmount}),\n    graphql(PRODUCT_DETAILS, {\n    options: props => ({\n        variables: {\n            productId: props.productId\n        },\n        fetchPolicy: 'no-cache'\n    }),\n}))(CartItem);","import React from \"react\";\nimport { connect } from 'react-redux';\nimport CartItem from \"./CartItem/CartItem\"\nimport \"./Cart.scss\"\n\nclass Cart extends React.Component {\n\n    render() {\n        \n        const { productsInCart } = this.props;\n\n        return (\n            <div className=\"cart\">\n                <div className=\"container\">\n                    <h1 className=\"cart__header\">\n                        Cart\n                    </h1>\n                    <ul className=\"cart__list cart-list\">\n                        {productsInCart.map((itm) => {\n                            return <CartItem\n                                key={itm.productId}\n                                productId={itm.productId}\n                                amount={itm.selectedProductCount}\n                                productInCart = {itm}\n                            />\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        productsInCart: state.productsInCart,\n    }\n}\n\nexport default connect(mapStateToProps)(Cart);","import React from 'react';\nimport Header from '../Header/Header'\nimport ProductList from '../ProductList/ProductList'\nimport PDP from '../PDP/PDP'\nimport Cart from '../Cart/Cart';\nimport { Route, Routes } from 'react-router';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route exact path=\"/\" element={\n            <ProductList />\n          } />\n          <Route path=\"/cart\" element={<Cart />} />\n          <Route path=\"/products/:id\" element={<PDP />} />\n        </Routes>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from \"./store\"\nimport './index.scss';\nimport App from './components/App/App';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'https://uwear-backend.herokuapp.com/',\n  // uri: 'http://localhost:4000',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <BrowserRouter basename=\"uwear-shop\">\n          <App />\n        </BrowserRouter>\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}